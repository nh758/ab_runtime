name: PR Merged
on:
  pull_request:
    types: [closed]
    branches: [master]
env:
  MAJOR: ${{ contains(github.event.pull_request.labels.*.name, 'major') }}
  MINOR: ${{ contains(github.event.pull_request.labels.*.name, 'minor') }}
  PATCH: ${{ contains(github.event.pull_request.labels.*.name, 'patch') }}
jobs:
  call-run-cy-test:
    name: Test
    # Only run if the PR closed by merging and we have a label
    if: ${{ github.event.pull_request.merged && (contains(github.event.pull_request.labels.*.name, 'major') || contains(github.event.pull_request.labels.*.name, 'minor') || contains(github.event.pull_request.labels.*.name, 'patch'))}}
    uses: ./.github/workflows/cy-tests.yml
    with:
      ref: ${{ github.ref }}
  get-release-type:
    name: Get Release Type
    runs-on: ubuntu-latest
    outputs: 
      type: ${{ steps.release-type.outputs.type }}
    steps:
      - name: Get Release Type
        id: release-type
        run: |
          if [ $MAJOR == 'true' ]; then echo "type=major" >> "$GITHUB_OUTPUT";
          elif [ $MINOR == 'true' ]; then echo "type=minor" >> "$GITHUB_OUTPUT";
          elif [ $PATCH == 'true' ]; then echo "type=patch" >> "$GITHUB_OUTPUT"; fi
  call-bump-version:
    name: Version
    # Only run if tests pass 
    needs: [ call-run-cy-test, get-release-type ]
    uses: ./.github/workflows/bump-version.yml
    with:
      ref: ${{ github.ref }}
      type: ${{ needs.get-release-type.outputs.type }}
  create-release:
    name: Create Release
    needs: call-bump-version
    runs-on: ubuntu-latest
    steps:
      - name: Create release on GitHub
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ needs.call-bump-version.outputs.new_version }}
          body: ${{ github.event.pull_request.body }}
          token: ${{ secrets.GITHUB_TOKEN }}
